version: "3.7"
services:
  sonarqube:
    image: "sonarqube:lts"
    ports:
      - target: 9000 # docker port
        published: 9000 # published port
        protocol: tcp
        mode: host
      # ElasticSearch
      - target: 9001 # docker port
        published: 9001 # published port
        protocol: tcp
        mode: host
    volumes:
      # global named volume:docker volume
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      # local relative catalog:docker volume
      - ./plugins/sonarqube-community-branch-plugin-1.2.0.jar:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin-1.2.0.jar
      - ./plugins/sonarqube-community-branch-plugin-1.2.0.jar:/opt/sonarqube/lib/common/sonarqube-community-branch-plugin-1.2.0.jar
    environment:
      # The embedded H2 database is used by default - comment below sonar.jdbc.* lines to use it
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonarqube
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      # JVM options of Web Server
      - sonar.web.javaOpts=-server -Xmx1G
      # JVM options of Compute Engine
      - sonar.ce.javaOpts=-server -Xmx1G
      # JVM options of ElasticSearch process
      - sonar.search.javaOpts=-server -Xms2G -Xmx2G
    deploy:
      replicas: 1
      resources:
        reservations:
          cpus: '0.25'
          memory: 2G
        limits:
          cpus: '0.50'
          memory: 4G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      labels:
        name: "sonarqube"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 2m30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - default

networks:
  default:
    # name of network created first by create-network.sh or create-swarm-network.sh script
    name: demo-swarm
    external: true

volumes:
  sonarqube_conf:
  sonarqube_data:
