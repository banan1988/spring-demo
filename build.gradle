plugins {
    // springfox-swagger2:2.9.2 is not compatible with version 2.2.0.RELEASE so we cannot upgrade it :(
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'java'

    // code coverage
    id 'jacoco'

    // Generate Git Information
    id "com.gorylenko.gradle-git-properties" version "2.2.0"

    // Keep dependencies up to date
    id "com.github.ben-manes.versions" version "0.27.0"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_12

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations.all {
    transitive = true
    exclude group: "junit", module: "junit"
}

repositories {
    mavenCentral()
}

dependencies {
    // generated
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    /************************
     added by me
     ************************/

    // swagger
    implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

    // junit5
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
    testCompile "org.junit.jupiter:junit-jupiter-params:${junit5Version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"

    // templates
    compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'

    // CSS styles and JS scripts
    compile 'org.webjars:bootstrap:4.3.1'
    compile 'org.webjars:jquery:3.4.1'
    compile 'org.webjars:angularjs:1.7.7'

    // LDAP authentication
    compile("org.springframework.ldap:spring-ldap-core")
    compile("org.springframework.security:spring-security-ldap")
    compile("com.unboundid:unboundid-ldapsdk")
}

test {
    useJUnitPlatform()

    jacoco {
        enabled = true
    }
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false

        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}

// Generate Build Information
springBoot {
    buildInfo {
        properties {
            additional = [
                    'description': 'description'
            ]
        }
    }
}
// HACK - Up to date build info needs to be generated after processResources
bootBuildInfo.dependsOn(processResources)
generateGitProperties.dependsOn(processResources)
